@using BLShopSite
@model List<vMenu>
@{
    string Drop = "";
}

<div class="container-fluid">
    <nav class="navbar navbar-inverse" role="navigation">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @*<a class="navbar-brand" href="#">Назва сайту</a>*@
        </div>
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                @foreach (var mi in Model.Where(p => p.ParentId == 0))
                {
                    Drop = mi.IsSubMenu == true ? "dropdown" : "";

                    <li class="dropdown">
                        <a href="@Url.Action(mi.Command, "Pages",new { Id = mi.Id } )" data-toggle="@Drop" title="">
                            @mi.Name
                            @if (mi.IsSubMenu)
                            {
                                <span class="caret"></span>
                            }
                        </a>
                        @await Component.InvokeAsync("cMenuItems", mi.Id)

                    </li>
                }
            </ul>
            <form class="navbar-form navbar-right" role="search">
                <div class="form-group">
                    <input type="text" class="form-control" placeholder="Слово для поиска">
                </div>
                <button type="submit" class="btn btn-default"><span class="glyphicon glyphicon-search"></span> Искать</button>
            </form>
        </div>
    </nav>
</div>

<script>
    $(document).ready(function () {
        $('.navbar a.dropdown-toggle').on('click', function (e) {
            var $el = $(this);
            var $parent = $(this).offsetParent(".dropdown-menu");
            $(this).parent("li").toggleClass('open');

            if (!$parent.parent().hasClass('nav')) {
                $el.next().css({ "top": $el[0].offsetTop, "left": $parent.outerWidth() - 4 });
            }

            $('.nav li.open').not($(this).parents("li")).removeClass("open");

            return false;
        });
    })
</script>
